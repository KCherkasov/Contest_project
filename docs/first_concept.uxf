<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.1.1">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1810</x>
      <y>0</y>
      <w>270</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>/GameObject/
--
#name: std::string
#description: std::string
#own_id: size_t
--
+GameObject()
/+~GameObject()/
+get_name(out: std::string&amp;): size_t
+get_description(out: std::string&amp;): size_t
+get_own_id(result: size_t&amp;): size_t
+set_name(value: std::string): size_t
+set_description(value: std::string): size_t
+set_own_id(value: size_t): size_t
/+what(out: std::string&amp;): size_t/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>270</y>
      <w>370</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>/Place/
--
#visitors: std::vector&lt;size_t&gt;
#encounters: std::vector&lt;std::pair&lt;size_t, size_t&gt; &gt;
--
+Place()
/+~Place()/
/+whos_there(here: std::vector&lt;size_t&gt;&amp;):size_t/
/+enter(some_args_there): size_t/
+get_visitor_id(visitor_index: size_t): size_t
+get_visitor_ids(result: std::vector&lt;size_t&gt;&amp;): size_t
+set_visitor_id(value: size_t, visitor_index: size_t): size_t  
+set_visitor_ids(values: std::vector&lt;size_t&gt;): size_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1490</x>
      <y>220</y>
      <w>470</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>450.0;10.0;450.0;40.0;10.0;40.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>580</y>
      <w>360</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>/Building/
--
#number: size_t
#employees: std::vector&lt;size_t&gt;
#professions: std::vector&lt;size_t&gt;
--
+Building()
/+~Building()/
+get_number(result: size_t): size_t
+set_number(value: size_t): size_t
+get_employee_id(employee_index: size_t): size_t
+get_employee_ids(result: std::vector&lt;size_t&gt;&amp;): size_t
+set_employee_id(value: size_t, index: size_t): size_t
+set_employee_ids(value: std::vector&lt;size_t&gt;): size_t
+get_profession_id(profession_index: size_t): size_t
+get_profession_ids(result: std::vector&lt;size_t&gt;&amp;): size_t
+set_profession_id(value: size_t, index: size_t): size_t
+set_profession_ids(value: std::vector&lt;size_t&gt;): size_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>450</y>
      <w>390</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>370.0;10.0;370.0;110.0;10.0;110.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>900</y>
      <w>360</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>/LivingHouse/
--
#inhabitants: std::vector&lt;size_t&gt;
--
+LivingHouse()
/+~LivingHouse()/
/+get_inhabiitant_id(inhabitant_index: size_t): size_t/
/+get_inhabitant_ids(result: std::vector&lt;size_t&gt;&amp;): size_t/
/+set_inhabitant_id(value: size_t, index: size_t): size_t/
/+set_inhabitant_ids(value: std::vector&lt;size_t&gt;): size_t/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1220</x>
      <y>900</y>
      <w>350</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>/Facility/
--
#partners: std::vector&lt;size_t&gt;
--
+Facility()
/+~Facility()/
+get_partners_ids(result: std::vector&lt;size_t&gt;&amp;): size_t
+get_partners_id(index: size_t, result: size_t&amp;): size_t
+set_partners_ids(value: std::vector&lt;size_t&gt;): size_t
+set_partners_id(index: size_t, value: size_t): size_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>1110</y>
      <w>310</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Mansion
--
--
+Mansion()
/+~Mansion()/
+whos_there(here: std::vector&lt;size_t&gt;&amp;): size_t
+what(out: std::string&amp;): szie_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>1110</y>
      <w>320</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>CommonHouse
--
#rooms: std::vector&lt;Room*&gt;
--
+CommonHouse()
/+~CommonHouse()/
+get_rooms_count(result: size_t&amp;): size_t
+get_room(result: Room*&amp;, index: size_t): size_t
+get_rooms(result: std::vector&lt;Room*&gt;&amp;): size_t
+set_rooms(value: std::vector&lt;Room*&gt;): size_t
+set_room(value: Room*, index: size_t): size_t
+add_room(new_room: Room*): size_t
+remove_room(index: size_t): size_t
+whos_there(here: std::vector&lt;size_t&gt;&amp;): size_t
+what(out: std::string&amp;): size_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>850</y>
      <w>550</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>530.0;10.0;530.0;30.0;10.0;30.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>1040</y>
      <w>200</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;40.0;10.0;40.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>1060</y>
      <w>200</w>
      <h>70</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;180.0;20.0;180.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>860</y>
      <w>310</w>
      <h>60</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;290.0;20.0;290.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1000</x>
      <y>1110</y>
      <w>450</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>ProducingFacility
--
#goods: std::vector&lt;std::pair&lt;size_t, size_t&gt; &gt;
--
+Workshop()
/+~Workshop()/
+get_goods_id(goods_index: size_t):: size_t
+get_goods_ids(result: std::vector&lt;std::pair&lt;size_t, size_t&gt; &gt;&amp;): size_t
+set_goods_id(value: size_t, index: size_t): size_t
+set_goods_ids(value:std::vector&lt;std::pair&lt;size_t, size_t&gt; &gt;): size_t
+produce_goods(index: size_t, amount: size_t): size_t
+export_goods(index: size_t, amount: size_t): size_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1210</x>
      <y>1040</y>
      <w>230</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;40.0;10.0;40.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1490</x>
      <y>1110</y>
      <w>340</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>ServiceFacility
--
#clients: std::vector&lt;size_t&gt;
--
+ServiceFacility()
/+~ServiceFacility()/
+get_clients_ids(result: std::vector&lt;size_t&gt;&amp;): size_t
+get_clients_id(index: size_t, result: size_t&amp;): size_t
+set_clients_ids(value: std::vector&lt;size_t&gt;): size_t
+set_clients_id(index: size_t, value: size_t): size_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1410</x>
      <y>1060</y>
      <w>270</w>
      <h>70</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;250.0;20.0;250.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>20</x>
      <y>20</y>
      <w>560</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>bg=green
/*
Реализация через указатель (можно создавать и удалять когда мы этого хотим)
*/
ServiceFacility* service_facility = new ServiceFacility();
std::vector&lt;size_t&gt; vector;
if (service_facility != NULL) {
  service_facility-&gt;get_visitor_ids(vector);
}
ServiceFacility* pointer2 = NULL;
pointer2 = service_facility;
delete service_facility;

--
/*
Реализация без указателя (будет жить до окончания работы блока где был создан)
*/
ServiceFacility service_facility();

--
Пример "заглушки"

size_t dead_end() {
  return 0;
}

--
size_t Place::get_visitor_id(visitor_index: size_t) {
  return 0;
}

size_t  Building::get_visitor_id(visitor_index size_t) {
  return _visitors[visitor_index];
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1590</x>
      <y>580</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/Street/
--
#buildings: std::vector&lt;Building*&gt;
#oustides: std::vector&lt;Outside*&gt;
#connections: std::vector&lt;Street*&gt;
--
+Street()
/+~Street()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1490</x>
      <y>540</y>
      <w>310</w>
      <h>60</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;290.0;20.0;290.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2000</x>
      <y>580</y>
      <w>100</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/Outside/
--
--
+Outside()
+~Oustide()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2040</x>
      <y>690</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2000</x>
      <y>750</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>Avenue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2270</x>
      <y>750</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>Sewers</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>600</y>
      <w>200</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1310</x>
      <y>600</y>
      <w>300</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>280.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1680</x>
      <y>390</y>
      <w>190</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1850</x>
      <y>390</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>District</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1700</x>
      <y>410</y>
      <w>220</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>200.0;10.0;200.0;110.0;10.0;110.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2110</x>
      <y>290</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>City</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1940</x>
      <y>310</y>
      <w>240</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>220.0;10.0;220.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1770</x>
      <y>540</y>
      <w>310</w>
      <h>60</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;290.0;20.0;290.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1930</x>
      <y>240</y>
      <w>250</w>
      <h>70</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;230.0;20.0;230.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2150</x>
      <y>240</y>
      <w>440</w>
      <h>70</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;420.0;20.0;420.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2510</x>
      <y>290</y>
      <w>120</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>/AliveGameObject/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2040</x>
      <y>710</y>
      <w>310</w>
      <h>60</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;290.0;20.0;290.0;40.0</additional_attributes>
  </element>
</diagram>
